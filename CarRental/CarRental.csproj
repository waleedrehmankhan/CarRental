<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.6.2" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="6.5.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="7.0.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.5.0" />
  </ItemGroup>
  <ItemGroup>
    <None Update="app.db" CopyToOutputDirectory="PreserveNewest" ExcludeFromSingleFile="true" />
    <None Update="Persistence\Repositories\Customer\GetCustomerInput.cs.d.ts">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>GetCustomerInput.cs</DependentUpon>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="ClientApp\src\app\interceptor\token.interceptor.ts" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="ClientApp\src\app\pages\booking\" />
    <Folder Include="ClientApp\src\app\pages\account\" />
    <Folder Include="ClientApp\src\app\shared\components\" />
    <Folder Include="ClientApp\src\app\shared\services\" />
    <Folder Include="UploadedFiles\" />
  </ItemGroup>
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\interceptor\token.interceptor.ts" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Dtos\CustomerDto.cs">
      <Generator>DtsGenerator</Generator>
      <LastGenOutput>CustomerDto.cs.d.ts</LastGenOutput>
    </Compile>
    <Compile Update="Dtos\MembershipTypeDto.cs">
      <Generator>DtsGenerator</Generator>
      <LastGenOutput>MembershipTypeDto.cs.d.ts</LastGenOutput>
    </Compile>
    <Compile Update="Helpers\PagedAndSortedInputDto.cs">
      <Generator>DtsGenerator</Generator>
      <LastGenOutput>PagedAndSortedInputDto.cs.d.ts</LastGenOutput>
    </Compile>
    <Compile Update="Helpers\PagedResultDto.cs">
      <Generator>DtsGenerator</Generator>
      <LastGenOutput>PagedResultDto.cs.d.ts</LastGenOutput>
    </Compile>
    <Compile Update="Helpers\ReturnMessage.cs">
      <Generator>DtsGenerator</Generator>
      <LastGenOutput>ReturnMessage.cs.d.ts</LastGenOutput>
    </Compile>
    <Compile Update="Persistence\Repositories\Customer\GetCustomerInput.cs">
      <Generator>DtsGenerator</Generator>
      <LastGenOutput>GetCustomerInput.cs.d.ts</LastGenOutput>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Update="ClientApp\src\app\classes\AddressDto.ts">
      <CustomToolNamespace>Dtos\AddressDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\ApplicationUserDto.ts">
      <CustomToolNamespace>Dtos\ApplicationUserDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\BookingDto.ts">
      <CustomToolNamespace>Dtos\BookingDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\BookingExtraDto.ts">
      <CustomToolNamespace>Dtos\BookingExtraDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\BranchDto.ts">
      <CustomToolNamespace>Dtos\BranchDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\CarAvailbilityTimeDto.ts">
      <CustomToolNamespace>Dtos\CarAvailbilityTimeDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\CarClassificationDto.ts">
      <CustomToolNamespace>Dtos\CarClassificationDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\CarDto.ts">
      <CustomToolNamespace>Dtos\CarDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\CustomerDto.ts">
      <CustomToolNamespace>Dtos\CustomerDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\ExtraDto.ts">
      <CustomToolNamespace>Dtos\ExtraDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\IdentityRoleDto.ts">
      <CustomToolNamespace>Dtos\IdentityRoleDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\InvoiceDetailDto.ts">
      <CustomToolNamespace>Dtos\InvoiceDetailDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\InvoiceDto.ts">
      <CustomToolNamespace>Dtos\InvoiceDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\LocationDto.ts">
      <CustomToolNamespace>Dtos\LocationDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\LoginDto.ts">
      <CustomToolNamespace>Dtos\LoginDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\MembershipTypeDto.ts">
      <CustomToolNamespace>Dtos\MembershipTypeDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\PagedAndSortedInputDto.ts">
      <CustomToolNamespace>Helpers\PagedAndSortedInputDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\PaymentDto.ts">
      <CustomToolNamespace>Dtos\PaymentDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\RegistrationDto.ts">
      <CustomToolNamespace>Dtos\RegistrationDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\ServiceHistoryDto.ts">
      <CustomToolNamespace>Dtos\ServiceHistoryDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\src\app\classes\UserDto.ts">
      <CustomToolNamespace>Dtos\UserDto.cs</CustomToolNamespace>
    </None>
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
  </Target>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>